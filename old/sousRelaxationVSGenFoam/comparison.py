import pandas as pd
import matplotlib.pyplot as plt

# Read the Excel file
df = pd.read_excel("BWR\BWR_Project\driftFluxModel\sousRelaxationVSGenFoam\Firstopenfoam.xlsx")

# Create empty lists for each column
columns = df.columns.tolist()
data = [[] for _ in columns]

# Iterate over each row and append values to the corresponding list
for index, row in df.iterrows():
    for i, col in enumerate(columns):
        data[i].append(row[col])

# Plot each column according to the first column
x = data[0]
zList = [0.0, 0.05516666666666667, 0.11033333333333334, 0.1655, 0.22066666666666668, 0.2758333333333334, 0.331, 0.38616666666666666, 0.44133333333333336, 0.49650000000000005, 0.5516666666666667, 0.6068333333333333, 0.662, 0.7171666666666667, 0.7723333333333333, 0.8275, 0.8826666666666667, 0.9378333333333334, 0.9930000000000001, 1.0481666666666667, 1.1033333333333335, 1.1585, 1.2136666666666667, 1.2688333333333335, 1.324, 1.3791666666666667, 1.4343333333333335, 1.4895, 1.5446666666666666, 1.5998333333333334]
U = [4.68292412, 4.683280842526126, 4.683636650935421, 4.68417549920266, 4.684810812352906, 4.685369377999813, 4.686052094451789, 4.686674221182721, 4.687238688660225, 4.687763722617048, 4.688260424059673, 4.68873598527355, 4.689285539795991, 4.7977001130848205, 4.976647114938557, 5.147798195087533, 5.319403456492951, 5.491756349728777, 5.664391914676529, 5.837103794205515, 6.009823838707057, 6.182532837238825, 6.355233332157937, 6.527923544744942, 6.7006108123123544, 6.873296867542701, 7.045983220683307, 7.218671224282107, 7.391363150634126, 7.564059700314377]
P = [14.754537446010717, 14.754537458403222, 14.754536346194941, 14.75453466178706, 14.754532675773328, 14.754530929620818, 14.754528795287047, 14.754526850304362, 14.754525085529254, 14.754523443993687, 14.75452189099885, 14.754520404063316, 14.754518685726755, 14.753745963781265, 14.752623975739699, 14.751583217470689, 14.750554743763123, 14.749555165789493, 14.748586956746873, 14.74764786399775, 14.746735206530074, 14.74584650253535, 14.74497968553508, 14.74413291841292, 14.743304613141774, 14.742493341890887, 14.74169783188029, 14.740916939835484, 14.740149625568229, 14.73939495]
for i in range(len(P)):
    P[i] *= 1e6
T = [602.6856235331478, 603.6813884005375, 604.6645568957903, 605.6338589729726, 606.5894159078755, 607.5317474531989, 608.4594455814964, 609.3730209537522, 610.2719987539601, 611.1558004596991, 612.0238555853689, 612.875586453318, 613.7099889447381, 613.9844075336325, 613.978336670654, 613.972704992042, 613.9671394705915, 613.961730015362, 613.9564900374556, 613.9514073716286, 613.9464675306551, 613.94165710203, 613.9369649183565, 613.932381051305, 613.9278969188351, 613.9235048043155, 613.9191978289408, 613.9149698136795, 613.9108151364061, 613.9067287213829]
epsilon = [0.00064467, 0.00064467, 0.00064467, 0.00064467, 0.00064467, 0.00064467, 0.00064467, 0.00064468, 0.00064468, 0.00064468, 0.00064468, 0.00064468, 0.00064468, 0.03162931, 0.06990657, 0.10622353, 0.14149819, 0.17458368, 0.20552905, 0.23456422, 0.26188781, 0.28766571, 0.31203037, 0.3351004, 0.35697627, 0.37774963, 0.39750232, 0.41630793, 0.43423312, 0.45133848]

for i in range(len(data[7])):
    data[7][i] = (1/0.434492) * data[7][i]

#Pressure
fig1 = plt.figure()
y = data[1]
plt.plot(x, y, label='GeN-FOAM ' + columns[1])
plt.plot(zList, P, label='DFM ' + columns[1])
# Add labels and legend
plt.xlabel(columns[0])
plt.ylabel('Pressure (MPa)')
plt.legend()

#Temperature
fig2 = plt.figure()
y = data[3]
plt.plot(x, y, label='GeN-FOAM ' + columns[3])
plt.plot(zList, T, label='DFM ' + columns[3])
# Add labels and legend
plt.xlabel(columns[0])
plt.ylabel('Temperature (K)')
plt.legend()

#Velocity
fig3 = plt.figure()
y = data[5]
plt.plot(x, y, label='GeN-FOAM ' + columns[5])
plt.plot(zList, U, label='DFM ' + columns[5])
# Add labels and legend
plt.xlabel(columns[0])
plt.ylabel('Vitesse (m/s)')
plt.legend()    

#Velocity
fig3 = plt.figure()
y = data[7]
plt.plot(x, y, label='GeN-FOAM ' + columns[7])
plt.plot(zList, epsilon, label='DFM ' + columns[7])
# Add labels and legend
plt.xlabel(columns[0])
plt.ylabel('Void Fraction')
plt.legend()

# Show the plot
plt.show()
